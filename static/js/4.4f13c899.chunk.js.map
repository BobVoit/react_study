{"version":3,"sources":["images/avatar1.jpg","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","message","DialogItem","s","dialog","active","src","avatar1","alt","to","id","name","maxLength30","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","dialogs_items","values","sendMessage","mapStateToProps","mapDispatchToProps","dispatch","sendMessageCreator","compose","connect","withAuthRedirect"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,qC,oBCC3CD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,aAAe,8BAA8B,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,0CCArSD,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,OAAS,2BAA2B,OAAS,6B,8ECMlGC,G,OAJC,SAACC,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAME,W,4CCU1BC,EATI,SAACH,GAClB,OACE,yBAAKC,UAAWG,IAAEC,OAAS,IAAMD,IAAEE,QACjC,yBAAKC,IAAKC,IAASC,IAAI,QACvB,kBAAC,IAAD,CAASC,GAAI,YAAcV,EAAMW,IAAKX,EAAMY,Q,iCC2B5CC,EAAcC,YAAiB,IAoB/BC,EAAsBC,YAAU,CACpCC,KAAM,wBADoBD,EAlBL,SAAChB,GACtB,OACE,0BAAMkB,SAAUlB,EAAMmB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,YAAY,qBACZC,UAAWC,IACXX,KAAM,iBACNY,SAAU,CAACC,IAAUZ,MAGzB,6BACE,6CAUOa,EApDC,SAAC1B,GACf,IAAI2B,EAAQ3B,EAAM4B,YAEZC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAErB,GAAIC,KAAMoB,EAAEpB,KAAMD,GAAIqB,EAAErB,QAErFuB,EAAmBP,EAAMQ,SAASJ,KAAK,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAclC,QAASkC,EAAElC,QAAS+B,IAAKG,EAAEzB,QAEpEgB,EAAMU,eAM7B,OACE,yBAAKpC,UAAWG,IAAE0B,SAChB,yBAAK7B,UAAWG,IAAEkC,eACdT,GAEJ,yBAAK5B,UAAWG,IAAE+B,UAChB,6BAAOD,GACP,6BACE,kBAACnB,EAAD,CAAqBG,SAZP,SAACqB,GACrBvC,EAAMwC,YAAYD,EAAOF,uB,iCCXzBI,EAAkB,SAACd,GACrB,MAAO,CACLC,YAAaD,EAAMC,cAInBc,EAAqB,SAACC,GACxB,MAAO,CACLH,YAAa,SAACH,GACZM,EAASC,YAAmBP,OAKlCQ,YACEC,YAAQL,EAAiBC,GACzBK,IAFFF,CAGEnB,GAEamB,sBACbC,YAAQL,EAAiBC,GACzBK,IAFaF,CAGbnB","file":"static/js/4.4f13c899.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar1.1d3a9efc.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__3EAWS\",\"dialogs\":\"Dialogs_dialogs__2FByX\",\"dialogs_tems\":\"Dialogs_dialogs_tems__2Kbev\",\"dialogs_items\":\"Dialogs_dialogs_items__2D6Xc\",\"active\":\"Dialogs_active__2e_nP\",\"dialog\":\"Dialogs_dialog__1ifFQ\",\"messages\":\"Dialogs_messages__2YQkZ\",\"message\":\"Dialogs_message__3v7ei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_items\":\"DialogItem_dialogs_items__2TOjB\",\"active\":\"DialogItem_active__20NPH\",\"dialog\":\"DialogItem_dialog__j4ieM\"};","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return <div className=\"message\">{props.message}</div>;\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './DialogItem.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport avatar1 from './../../../images/avatar1.jpg'\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <img src={avatar1} alt=\"ava\"/>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport UserMessages from './Message/Message.jsx';\r\nimport DialogItem from './DialogItem/DialogItem.jsx';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  const dialogsElements = state.dialogs.map( d => <DialogItem key={d.id} name={d.name} id={d.id} />);\r\n\r\n  const messagesElements = state.messages.map( m => <UserMessages message={m.message} key={m.id} />);\r\n\r\n  const newMessageBody = state.newMessageBody;\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  } \r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_items}>\r\n        { dialogsElements }\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{ messagesElements }</div>\r\n        <div>\r\n          <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return ( // handleSubmit появляется благодаря reduxForm\r\n    <form onSubmit={props.handleSubmit} > \r\n      <div>\r\n        <Field\r\n          placeholder=\"Enter your message\"\r\n          component={Textarea}\r\n          name={\"newMessageBody\"}\r\n          validate={[required, maxLength30]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n  form: \"dialogAddMessageForm\"\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { sendMessageCreator } from \"../../redux/dialogsReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  }\r\n}\r\n\r\ncompose( // write order of calls down top\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect,\r\n)(Dialogs)\r\n\r\nexport default compose( // write order of calls down top\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}