{"version":3,"sources":["images/avatar1.jpg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","discripton_block","src","photos","large","account_inf","fullName","Preloader","Post","item","avatar1","message","likesCount","MyPosts","memo","postsElements","posts","map","p","posts_block","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.17bca331.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar1.1d3a9efc.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discripton_block\":\"ProfileInfo_discripton_block__33KZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__19KNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__1jV5D\",\"posts\":\"MyPosts_posts__11aRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__llkF6\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status \r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true});\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({editMode: false});\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({ status: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {  // обязаельно в componentDidUpdate пишем через условие, чтобы избежать ошибок\r\n            this.setState({status: this.props.status});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { !this.state.editMode && \r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode } >{this.state.status || '-----'}</span>\r\n                    </div>\r\n                }\r\n                { this.state.editMode && \r\n                    <div>\r\n                        <input \r\n                            onChange={this.onStatusChange}\r\n                            autoFocus={true} \r\n                            onBlur={ this.deactivateEditMode }\r\n                            value={this.state.status} \r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode } >{props.status || '-----'}</span>\r\n                </div>\r\n            }\r\n            { editMode && \r\n                <div>\r\n                    <input \r\n                        onChange={ onStatusChange }\r\n                        autoFocus={true} \r\n                        onBlur={ deactivateEditMode }\r\n                        value={status} \r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {  \r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.discripton_block}>\r\n        <div>{<img src={profile.photos.large} />}</div>\r\n        <div className={s.account_inf}>\r\n          <div>\r\n            <div>{profile.fullName}</div>\r\n          </div>\r\n          <ProfileStatusWithHooks\r\n            status={status}\r\n            updateStatus={updateStatus}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport avatar1 from \"./../../../../images/avatar1.jpg\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={avatar1} />\r\n        {props.message}\r\n      <div>\r\n        <span>like</span><span>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from './Post/Post.jsx'\r\nimport s from './MyPosts.module.css'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators.js\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls.js\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != this.props || nextState != this.state;\r\n  // }\r\n\r\n  const postsElements = props.posts.map( p => <Post message={p.message} likesCount={p.likesCount} />  );\r\n\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.posts_block}>\r\n      <h3>My Posts</h3>\r\n      <AddNewPostFormRedux \r\n        onSubmit={onAddPost} \r\n      />\r\n      <div className={s.posts}>\r\n        { postsElements }\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} >\r\n      <div>\r\n        <Field \r\n          name={\"newPostText\"}\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n          placeholder={\"Post message\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n   </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n  form: \"profileAddNewPostForm\"\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n","import MyPosts from './MyPosts';\r\nimport {addPostActionCreator} from '../../../redux/profileReducer';\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\nimport MyPostsContainer from './MyPosts/MyPostContainer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from './Profile';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profileReducer';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;    \r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile \r\n                {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status}  \r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n          );\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}